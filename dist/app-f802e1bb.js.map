{"version":3,"file":"app-f802e1bb.js","sources":["../src/global-styles.js","../src/utils/mock-api.js","../src/store/store.js","../src/components/parent-component.js","../src/utils/svg-template.js","../src/utils/icon-template.js","../src/components/modal.js","../src/components/tooltip-component.js","../src/locales/en.js","../src/utils/translate.js","../src/locales/tr.js","../src/views/employee-list-view.js","../src/router/router.js","../src/components/navigation.js","../app.js"],"sourcesContent":["export const globalStyles = new CSSStyleSheet();\nglobalStyles.replaceSync(`\n      .btn-primary {\n        background-color: var(--ing-orange);\n        color: var(--white);\n        padding: 8px 16px;\n        font-size: 16px;\n        outline: none;\n        border: none;\n        cursor: pointer;\n        border-radius: 5px;\n      }\n\n      .btn-primary:hover {\n        background-color: transparent;\n        color: var(--ing-blue);\n        outline: 2px solid var(--ing-blue);\n      }\n\n       .btn-primary.small {\n        font-size: 12px;\n      }\n`);\n","const createRandomDate = (start, end) => {\n  return new Date(\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\n  )\n    .toISOString()\n    .split('T')[0];\n};\n\nconst createRandomPhoneNumber = () => {\n  return `+(90) ${Math.floor(500 + Math.random() * 90)} ${Math.floor(Math.random() * 9999999)}`;\n};\n\nconst TRtoENGCharacter = (text) => {\n  const charMap = {\n    ç: 'c',\n    Ç: 'C',\n    ğ: 'g',\n    Ğ: 'G',\n    ı: 'i',\n    İ: 'I',\n    ö: 'o',\n    Ö: 'O',\n    ş: 's',\n    Ş: 'S',\n    ü: 'u',\n    Ü: 'U',\n  };\n\n  return text.replace(/[çÇğĞıİöÖşŞüÜ]/g, (match) => charMap[match]);\n};\n\nconst createRandomEmail = (firstName, lastName) => {\n  const changetoENGFirstName = TRtoENGCharacter(firstName.toLowerCase());\n  const changetoENGLastName = TRtoENGCharacter(lastName.toLowerCase());\n  return `${changetoENGFirstName}.${changetoENGLastName}@ing.com`;\n};\n\nconst firstNames = [\n  'Baran',\n  'Meryem',\n  'Deniz',\n  'Yusuf',\n  'Duru',\n  'Kaan',\n  'Zeynep',\n  'Rüzgar',\n  'Efe',\n  'Asya',\n];\nconst lastNames = [\n  'Şahin',\n  'Bolu',\n  'Kurtuluş',\n  'Öztürk',\n  'Aksoy',\n  'Çetin',\n  'Acar',\n  'Yıldız',\n  'Demirtaş',\n  'Kılınç',\n];\nconst departments = ['Analytics', 'Tech'];\nconst positions = ['Junior', 'Medior', 'Senior'];\n\nexport const generateMockEmployees = (count = 50) => {\n  return Array.from({length: count}, (_, index) => {\n    const firstName = firstNames[Math.floor(Math.random() * firstNames.length)];\n    const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];\n\n    return {\n      id: (index + 1).toString(),\n      firstName,\n      lastName,\n      dateOfEmployment: createRandomDate(new Date(2010, 0, 1), new Date()),\n      dateOfBirth: createRandomDate(new Date(1950, 0, 1), new Date(2003, 0, 1)),\n      phoneNumber: createRandomPhoneNumber(),\n      email: createRandomEmail(firstName, lastName),\n      department: departments[Math.floor(Math.random() * departments.length)],\n      position: positions[Math.floor(Math.random() * positions.length)],\n      selected: false,\n    };\n  });\n};","// Requirement of the code:\n// 1. The store should have the following properties\n// - employees: an array of employees\n// 2. The store should have the following methods\n// - fetchEmployees: returns all employees\n// - fetchEmployee: returns a single employee by id\n// - addEmployee: adds a new employee\n// - updateEmployee: updates an employee\n// - deleteEmployee: deletes an employee\n\nimport {LitState} from 'lit-element-state';\n\nimport {generateMockEmployees} from '../utils/mock-api';\n\nclass Store extends LitState {\n  constructor() {\n    super();\n    this.storageKey = 'store';\n    this.language = 'en'; // Default language is 'en'\n    this.subscribers = [];\n\n    const storedData = localStorage.getItem(this.storageKey);\n    if (!storedData) {\n      const mockData = generateMockEmployees(100);\n      localStorage.setItem(this.storageKey, JSON.stringify(mockData));\n    }\n    this.state = {\n      language: localStorage.setItem('language', 'en'),\n      employees: JSON.parse(localStorage.getItem(this.storageKey) || '[]'),\n    };\n  }\n\n  fetchLanguage() {\n    return this.language;\n  }\n\n  setLanguage(language) {\n    this.language = language;\n    this.notifySubscribers();\n  }\n\n  subscribe(callback) {\n    this.subscribers.push(callback);\n  }\n\n  notifySubscribers() {\n    this.subscribers.forEach((callback) => callback(this.language));\n  }\n\n  fetchEmployees() {\n    return this.state.employees;\n  }\n\n  fetchEmployee(id) {\n    return this.state.employees.find((emp) => emp.id === id);\n  }\n\n  addEmployee(employee) {\n    const newId =\n      Math.max(...this.state.employees.map((emp) => parseInt(emp.id)), 0) + 1;\n    const newEmployee = {id: newId.toString(), ...employee, selected: false};\n    this.state = {\n      employees: [newEmployee, ...this.state.employees],\n    };\n    localStorage.setItem(this.storageKey, JSON.stringify(this.state.employees));\n    return newEmployee;\n  }\n\n  updateEmployee(employee) {\n    const index = this.state.employees.findIndex(\n      (emp) => emp.id === employee.id\n    );\n    if (index !== -1) {\n      this.state.employees[index] = employee;\n      this.state = {\n        employees: [...this.state.employees],\n      };\n      localStorage.setItem(\n        this.storageKey,\n        JSON.stringify(this.state.employees)\n      );\n    }\n    return employee;\n  }\n\n  deleteEmployee(id) {\n    this.state = {\n      employees: this.state.employees.filter((emp) => emp.id !== id),\n    };\n    localStorage.setItem(this.storageKey, JSON.stringify(this.state.employees));\n  }\n}\n\nexport const store = new Store();\n","import {LitElement} from 'lit';\nimport {store} from '../store/store';\nimport {observeState} from 'lit-element-state';\n\nexport class ParentComponent extends observeState(LitElement) {\n  static properties = {\n    employees: {type: Array},\n  };\n\n  constructor() {\n    super();\n    this.employees = [];\n\n    this.employees = store.employees;\n    this.requestUpdate();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.employees = [];\n  }\n}\n\n// TODO: I need to add language localization to the application via parent component \n// so that all the child components can access it.\n","import {svg, html} from 'lit';\n\nexport const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\nexport const addIcon = svg`<path fill=\"currentColor\" d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/>`;\nexport const closeIcon = svg`<path fill=\"currentColor\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>`;\nexport const deleteIcon = svg`<path d=\"M6 19c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>`;\nexport const employeeIcon = svg`<path fill=\"currentColor\" d=\"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z\"/>`;\nexport const engFlagIcon = svg`   <path fill=\"#012169\" d=\"M0 0h640v480H0z\"/>\n<path fill=\"#FFF\" d=\"m75 0 244 181L562 0h78v62L400 241l240 178v61h-80L320 301 81 480H0v-60l239-178L0 64V0z\"/>\n<path fill=\"#C8102E\" d=\"m424 281 216 159v40L369 281zm-184 20 6 35L54 480H0zM640 0v3L391 191l2-44L590 0zM0 0l239 176h-60L0 42z\"/>\n<path fill=\"#FFF\" d=\"M241 0v480h160V0zM0 160v160h640V160z\"/>\n<path fill=\"#C8102E\" d=\"M0 193v96h640v-96zM273 0v480h96V0z\"/>`;\nexport const trFlagIcon = svg` <g fill-rule=\"evenodd\">\n<path fill=\"#e30a17\" d=\"M0 0h640v480H0z\"/>\n<path fill=\"#fff\" d=\"M407 247.5c0 66.2-54.6 119.9-122 119.9s-122-53.7-122-120 54.6-119.8 122-119.8 122 53.7 122 119.9\"/>\n<path fill=\"#e30a17\" d=\"M413 247.5c0 53-43.6 95.9-97.5 95.9s-97.6-43-97.6-96 43.7-95.8 97.6-95.8 97.6 42.9 97.6 95.9z\"/>\n<path fill=\"#fff\" d=\"m430.7 191.5-1 44.3-41.3 11.2 40.8 14.5-1 40.7 26.5-31.8 40.2 14-23.2-34.1 28.3-33.9-43.5 12-25.8-37z\"/>\n</g>`;\nexport const userIcon = svg`<path d=\"M7.5 6.5C7.5 8.981 9.519 11 12 11C14.481 11 16.5 8.981 16.5 6.5C16.5 4.019 14.481 2 12 2C9.519 2 7.5 4.019 7.5 6.5ZM20 21H21V20C21 16.141 17.859 13 14 13H10C6.14 13 3 16.141 3 20V21H20Z\"/>`;\nexport const gridIcon = svg`<path d=\"M4.6 2A2.6 2.6 0 0 0 2 4.6v3.8A2.6 2.6 0 0 0 4.6 11h3.8A2.6 2.6 0 0 0 11 8.4V4.6A2.6 2.6 0 0 0 8.4 2H4.6ZM15.6 2A2.6 2.6 0 0 0 13 4.6v3.8a2.6 2.6 0 0 0 2.6 2.6h3.8A2.6 2.6 0 0 0 22 8.4V4.6A2.6 2.6 0 0 0 19.4 2h-3.8ZM4.6 13A2.6 2.6 0 0 0 2 15.6v3.8A2.6 2.6 0 0 0 4.6 22h3.8a2.6 2.6 0 0 0 2.6-2.6v-3.8A2.6 2.6 0 0 0 8.4 13H4.6ZM15.6 13a2.6 2.6 0 0 0-2.6 2.6v3.8a2.6 2.6 0 0 0 2.6 2.6h3.8a2.6 2.6 0 0 0 2.6-2.6v-3.8a2.6 2.6 0 0 0-2.6-2.6h-3.8Z\"/>`;\nexport const tableIcon = svg`<path fill=\"currentColor\" d=\"M3 4h18v2H3V4zm0 7h18v2H3v-2zm0 7h18v2H3v-2z\"/>`;\nexport const languageIcon = svg`<path fill=\"currentColor\" d=\"M12.87 15.07l-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7l1.62-4.33L19.12 17h-3.24z\"/>`;\nexport const editIcon = svg`\n  <g transform=\"scale(0.0485)\">\n    <path d=\"M389.844,182.85c-6.743,0-12.21,5.467-12.21,12.21v222.968c0,23.562-19.174,42.735-42.736,42.735H67.157\n      c-23.562,0-42.736-19.174-42.736-42.735V150.285c0-23.562,19.174-42.735,42.736-42.735h267.741c6.743,0,12.21-5.467,12.21-12.21\n      s-5.467-12.21-12.21-12.21H67.157C30.126,83.13,0,113.255,0,150.285v267.743c0,37.029,30.126,67.155,67.157,67.155h267.741\n      c37.03,0,67.156-30.126,67.156-67.155V195.061C402.054,188.318,396.587,182.85,389.844,182.85z\"/>\n    <path d=\"M483.876,20.791c-14.72-14.72-38.669-14.714-53.377,0L221.352,229.944c-0.28,0.28-3.434,3.559-4.251,5.396l-28.963,65.069\n      c-2.057,4.619-1.056,10.027,2.521,13.6c2.337,2.336,5.461,3.576,8.639,3.576c1.675,0,3.362-0.346,4.96-1.057l65.07-28.963\n      c1.83-0.815,5.114-3.97,5.396-4.25L483.876,74.169c7.131-7.131,11.06-16.61,11.06-26.692\n      C494.936,37.396,491.007,27.915,483.876,20.791z M466.61,56.897L257.457,266.05c-0.035,0.036-0.055,0.078-0.089,0.107\n      l-33.989,15.131L238.51,247.3c0.03-0.036,0.071-0.055,0.107-0.09L447.765,38.058c5.038-5.039,13.819-5.033,18.846,0.005\n      c2.518,2.51,3.905,5.855,3.905,9.414C470.516,51.036,469.127,54.38,466.61,56.897z\"/>\n  </g>`;\nexport const ingLogo = svg`\n  <path d=\"M62 78H16C7 78 0 71 0 62V16C0 7 7 0 16 0h46c9 0 16 7 16 16v46c0 9-7 16-16 16z\" style=\"fill:#ff6200\"/>\n  <path d=\"m76 68-2-1h-1l1 3 1 1 1-2v-1m-11 9v-7l-2 1-2 1 1 3v2l1 1 2-1m-20-6v-2l-2-2-1-1-1 3 2 3 1 3 1-4m26 2c-1-1 1-3-1-3l-2-1v3l1 4 3-2-1-1zm-2-28-3-2v-1l-3-2v-5c0 2 2 2 2 2 2 0 2-1 3-2l1-1 1-1h1l-9-1-2 2 1 3v5l2 1 1 2 4 2 1-2zm-2 6-4-1v1l4 2v-2zm-7-24 1 2h4c3-2-2-3-3-3h-3l1 1zm7-4 5 4 3-2-1-5-2-1c-1-1-3 0-4 1l-1 3zm-13 3h-2l-3 1-1 3h1l3-1 2-3zm-2 8-2-2h-8c0 2 2 3 2 3l3 2 2-1v3l-1 3-3 2v3l2-1 2-2 2-1v-7l1-2zm-3 17-2-1-2 1 1 2 2-1 1-1zm-6-26 2-2h1c-1-3-2-3-3-3l-2-1c-2 0-4 1-4 3v3l3 3 3-3zm26 24 9 2v2l-9-2v3l3 1 6 3v2l-10-5-2 2-4-2-4-1v-3l2-3h2v-2l-1-1h-9l-1 2c0 2 2 1 3 0v2c0 2 2 2 2 2l-1 2v1l-6 2-2 1-2-1h-2l-11 5v-2l11-6v-2l-7 1-5 2-1-2 6-2 7-1-1-1c0-2-2-4-4-6l-1-3h2v-3l-1-3 1-3-2-1-2-1-1-5 1-4 3-2 3-1 5 2 2 4h3l5 1 8-2c0-3 3-5 5-5h4l4 5 1 4-1 3-3 2v6l-1 3 2-1c0 4-1 3-2 5l-2 4-2 1v1M52 74l-1-1-3-1v3l2 3h3l-1-2v-2zm-5-15 1 4h1l2-2v4l3 1 1-2 2 2h3v-3l3 2 1-2 1-4c-3-2-6-2-9-2s-6 0-9 2zm12 12-4 2v5h3l1-3v-4zM27 20l-1 3 1 5-3 2v5l2-1 3-3 2-1v-3l-1-2v-6l-3 1m4 22-6 2-4 2 1 3v4l4-4 5-4v-3m-6 30 1-2 4-4-2-2-2 2-2 1 1 1v4m12-7-2-1-1 2 1 4 1 1 3 2-2-5v-3m3-55 6 4 4 2 2-4 3 1v4l2-1 5-1c2-1 3-4 5-4l5 2h3l2-1v-1l-8-5-4 3-1-3h-2l-2 6h-2V9s2-2 1-3l-3 1-3 2-1-1-3-1-1 4-6-5-8 3-4 5-2 3 3 1 2-3c2-1 6-3 7-5zM22 54v2l1 5v3l1 2 1-1 2-4-1-4v-5l-4 2zm10-17v-3h-4l-4 2v6l2-1 4-3 2-1zm-3 40-1 1h-1l-2-5 6-2 1 2-3 4\" style=\"fill:#fff\"/>\n`;\n\nexport const svgIcon = (icon) => {\n  const isFlagIcon = icon === engFlagIcon || icon === trFlagIcon;\n  const viewBox = isFlagIcon\n    ? '0 0 640 480'\n    : icon === ingLogo\n    ? '0 0 77.7 77.7'\n    : '0 0 24 24';\n  return html`<svg width=\"24\" height=\"24\" viewBox=\"${viewBox}\">${icon}</svg>`;\n};\n","import {html, css, LitElement} from 'lit';\nimport {svgIcon} from '../utils/svg-template.js';\n\nexport class IconComponent extends LitElement {\n  static properties = {\n    icon: {type: Object}\n  };\n\n  static styles = css`\n    :host {\n      display: inline-block;\n      width: 24px;\n      height: 24px;\n    }\n\n    svg {\n      width: 100%;\n      height: 100%;\n      line-height: 0;\n    }\n\n    svg:hover {\n      fill: var(--ing-orange);\n    }\n  `;\n\n  render() {\n    return html`${svgIcon(this.icon)}`;\n  }\n}\n\ncustomElements.define('icon-component', IconComponent);","import {LitElement, html, css} from 'lit';\nimport '../utils/icon-template';\nimport {closeIcon} from '../utils/svg-template';\n\nexport class Modal extends LitElement {\n  static properties = {\n    message: {type: String},\n    isActive: {type: Boolean},\n    modalTitle: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.message = '';\n    this.isActive = false;\n  }\n\n  updated(changedProperties) {\n    if (changedProperties.has('isActive')) {\n      this.dispatchEvent(\n        new CustomEvent('modal-closed', {\n          detail: {isActive: this.isActive},\n          bubbles: true,\n          composed: true,\n        })\n      );\n    }\n  }\n\n  static styles = css`\n    .modal {\n      z-index: 1;\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      scroll-behavior: none;\n      display: none;\n    }\n\n    .modal.active {\n      display: grid;\n      place-items: center;\n    }\n\n    .modal-content {\n      display: block;\n      position: absolute;\n      overflow: auto;\n      background-color: var(--white);\n      border-radius: 5px;\n      padding: 8px 16px;\n      min-width: 250px;\n      max-width: 400px;\n      max-height: 300px;\n    }\n\n    .modal-header {\n      display: flex;\n      justify-content: space-between;\n      background: white;\n      color: var(--ing-orange);\n      font-size: 18px;\n      line-height: 0;\n    }\n\n    .modal-open {\n      overflow-y: hidden;\n    }\n\n    .modal-body {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    .modal-actions {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      gap: 10px;\n      width: 100%;\n    }\n\n    .btn {\n      display: inline-block;\n      padding: 10px 20px;\n      margin: 4px 0;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      font-family: 'INGFont', sans-serif;\n      font-size: 16px;\n    }\n\n    .btn-close {\n      background-color: transparent;\n      border: none;\n      cursor: pointer;\n      color: var(--ing-orange);\n      padding: 0;\n      margin: 0;\n    }\n\n    .btn-confirm {\n      background-color: var(--ing-orange);\n      color: var(--white);\n    }\n    .btn-cancel {\n      outline: 2px solid var(--ing-blue);\n      color: var(--ing-blue);\n    }\n  `;\n\n  render() {\n    return html`\n      <div class=\"modal ${this.isActive ? 'active' : ''}\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <p>${this.modalTitle}</p>\n            <button @click=${this.closeModal} class=\"btn-close\">\n              <icon-component .icon=${closeIcon}></icon-component>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <slot name=\"modal-message\" class=\"modal-message\"></slot>\n            <div name=\"modal-actions\" class=\"modal-actions\">\n              <button class=\"btn btn-confirm\" @click=\"${this.handleConfirm}\">\n                Confirm\n              </button>\n              <button class=\"btn btn-cancel\" @click=\"${this.handleCancel}\">\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  handleConfirm() {\n    this.dispatchEvent(new CustomEvent('confirm'));\n  }\n\n  handleCancel() {\n    this.dispatchEvent(new CustomEvent('cancel'));\n  }\n\n  closeModal() {\n    this.isActive = false;\n  }\n}\n\ncustomElements.define('modal-component', Modal);\n","import {html, css, LitElement} from 'lit';\n\nclass TooltipComponent extends LitElement {\n  static styles = css`\n    :host {\n      position: relative;\n      display: inline-block;\n    }\n\n    .tooltip-text {\n      visibility: hidden;\n      width:max-content;\n      background-color: var(--ing-blue);\n      color: var(--white);\n      text-align: center;\n      border-radius: 6px;\n      padding: 6px 16px;\n      position: absolute;\n      z-index: 1;\n      bottom: 125%;\n      left: 50%;\n      transform: translateX(-50%);\n      opacity: 0;\n      transition: all 150ms cubic-bezier(0.25, 0.8, 0.25, 1);\n      font-size: 12px;\n    }\n\n    :host(:hover) .tooltip-text {\n      visibility: visible;\n      opacity: 1;\n    }\n\n    :host(:hover) .tooltip-text::after {\n      content: '';\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      /* margin-left: -5px; */\n      border-width: 5px;\n      border-style: solid;\n      border-color: var(--ing-blue) transparent transparent transparent;\n    }\n  `;\n\n  render() {\n    return html`\n      <slot></slot>\n      <div class=\"tooltip-text\">\n        <slot name=\"tooltip\"></slot>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('tooltip-component', TooltipComponent);\n","export const en = {\n  title: {\n    employeeList: \"Employee List\"\n  },\n  warnings:{\n    loading: \"Loading...\",\n    noEmployees: \"No employees found\"\n\n  },\n  buttons: {\n    homePage: \"Go to back to Employee List\",\n    deleteSelected: \"Delete Selected Employees\"\n  },\n  navigation: {\n    employees: \"Employee List\",\n    addNewEmployee: \"Add New\"\n  },\n  placeholder: {\n    search: \"Search employees...\"\n  },\n  buttonText: {\n    edit: \"Edit\",\n    delete: \"Delete\"\n  },\n  tableHeaders: {\n    firstName: \"First Name\",\n    lastName: \"Last Name\",\n    employmentDate: \"Employment Date\",\n    birthDate: \"Birth Date\",\n    phoneNumber: \"Phone Number\",\n    email: \"Email\",\n    department: \"Department\",\n    position: \"Position\",\n    actions: \"Actions\"\n  },\n  viewMode: {\n    grid: \"Grid View\",\n    table: \"Table View\"\n  },\n  labels: {\n    dateOfBirth: \"Birth Date\",\n    dateOfEmployment: \"Employment Date\",\n    phoneNumber: \"Phone Number\",\n    email: \"Email\",\n    department: \"Department\",\n    position: \"Position\"\n  }\n};\n","import { store } from '../store/store.js';\nimport { en } from '../locales/en.js';\nimport { tr } from '../locales/tr.js';\n\nconst translations = {\n  en,\n  tr,\n};\n\nconst getNestedValue = (obj, path) => {\n  return path.split('.').reduce((acc, part) => {\n    return acc && acc[part] !== undefined ? acc[part] : null;\n  }, obj);\n};\n\nexport const translate = (key) => {\n  const currentLanguage = store.fetchLanguage();\n\n  if (!translations[currentLanguage]) {\n    console.error(\n      `Translation for language \"${currentLanguage}\" is not available.`\n    );\n    return key;\n  }\n  const translation = getNestedValue(translations[currentLanguage], key);\n\n  if (!translation) {\n    console.error(`Translation for key \"${key}\" is not available.`);\n    return key;\n  }\n\n  return translation;\n};\n","export const tr = {\n  title: {\n    employeeList: \"Çalışan Listesi\"\n  },\n  warnings: {\n    loading: \"Yükleniyor...\",\n    noEmployees: \"Çalışan Bulunamadı\"\n  },\n  buttons: {\n    homePage: \"Çalışan Listesine Geri Dön\",\n    deleteSelected: \"Seçilen Çalışanları Sil\"\n  },\n  navigation: {\n    employees: \"Çalışan Listesi\",\n    addNewEmployee: \"Yeni Ekle\"\n  },\n  placeholder: {\n    search: \"Çalışanları Ara...\"\n  },\n  buttonText: {\n    edit: \"Düzenle\",\n    delete: \"Sil\"\n  },\n  tableHeaders: {\n    firstName: \"Ad\",\n    lastName: \"Soyad\",\n    employmentDate: \"İşe Başlama Tarihi\",\n    birthDate: \"Doğum Tarihi\",\n    phoneNumber: \"Telefon Numarası\",\n    email: \"E-posta\",\n    department: \"Departman\",\n    position: \"Pozisyon\",\n    actions: \"İşlemler\"\n  },\n  viewMode: {\n    list: \"Liste Görünümü\",\n    table: \"Tablo Görünümü\"\n  },\n  labels: {\n    dateOfBirth: \"Doğum Tarihi\",\n    dateOfEmployment: \"İşe Başlama Tarihi\",\n    phoneNumber: \"Telefon Numarası\",\n    email: \"E-posta\",\n    department: \"Departman\",\n    position: \"Pozisyon\"\n  }\n};\n","import {html, css} from 'lit';\nimport { globalStyles } from '../global-styles.js';\nimport {ParentComponent} from '../components/parent-component';\nimport {store} from '../store/store';\nimport '../components/modal';\nimport '../components/tooltip-component';\nimport {tableIcon, gridIcon, deleteIcon, editIcon} from '../utils/svg-template';\nimport { translate } from '../utils/translate.js';\n\nexport class EmployeeListView extends ParentComponent {\n  static styles = [globalStyles, css`\n    .employee-list {\n      padding: 20px 56px;\n    }\n\n    .title {\n      font-size: 24px;\n      color: var(--ing-orange);\n    }\n\n    .header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .features {\n      gap: 16px;\n    }\n\n    .table-view {\n      display: table;\n      width: 100%;\n      border-collapse: collapse;\n      background-color: var(--white);\n    }\n\n    .table-view th,\n    .table-view td {\n      padding: 12px 6px;\n      font-size: 14px;\n      text-align: center;\n    }\n\n    .table-view th {\n      color: var(--ing-orange);\n    }\n\n    .table-view th,\n    .table-view tr {\n      border-bottom: 1px solid var(--ing-gray);\n    }\n\n    .table-view tr:last-of-type {\n      border-bottom: none;\n    }\n\n    .table-view th:last-of-type,\n    .table-view td:last-of-type {\n      padding-right: 12px;\n      padding-left: 36px;\n    }\n\n    .grid-view {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n      gap: 1rem;\n    }\n\n    .grid-card {\n      outline: 1px solid var(--ing-orange);\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-end;\n      padding: 32px 16px;\n      line-height: 0.9em;\n      position: relative;\n    }\n\n    .grid-card .name {\n      font-size: 20px;\n      font-weight: bold;\n      color: var(--ing-blue);\n      text-decoration: underline;\n      margin-bottom: 16px;\n    }\n\n    .grid-card .category {\n      color: var(--ing-blue);\n      margin-bottom: 4px;\n    }\n\n    .grid-card.selected {\n      outline: 4px solid var(--ing-orange);\n      background-color: var(--ing-orange-10);\n    }\n\n    .grid-view .actions-buttons {\n      display: flex;\n      flex-direction: column;\n      justify-content: flex-end;\n      gap: 12px;\n      align-items: flex-end;\n    }\n\n    .grid-view .actions-buttons p {\n      font-size: 14px;\n      color: var(--ing-orange);\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      margin: 0;\n    }\n\n    .checkbox-select-employee {\n      opacity: 0;\n      width: 0;\n      height: 0;\n    }\n\n    .checkbox-select-employee-label {\n      position: absolute;\n      top: 16px;\n      right: 16px;\n      cursor: pointer;\n      color: var(--ing-blue);\n    }\n\n    .checkbox-select-employee-label:hover {\n      text-decoration: underline;\n    }\n\n    .checkbox-select-employee-label.selected {\n      color: var(--ing-orange);\n    }\n\n    .grid-card .detail {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 12px;\n    }\n\n    .actions-buttons {\n      display: flex;\n      justify-content: center;\n      gap: 8px;\n    }\n\n    .actions-buttons * {\n      background-color: transparent;\n      border: none;\n      fill: var(--ing-orange);\n      cursor: pointer;\n    }\n\n    .actions-buttons icon-component button svg {\n      width: 20px;\n      height: 20px;\n    }\n\n    .toggle-view-buttons {\n      display: flex;\n      padding: 2px;\n      margin: 0;\n      gap: 8px;\n    }\n\n    .toggle-view-btn {\n      background-color: transparent;\n      border: none;\n      cursor: pointer;\n      fill: var(--ing-blue);\n    }\n\n    .toggle-view-btn > svg {\n      width: 24px;\n      height: 24px;\n      fill: var(--ing-blue);\n    }\n\n    .toggle-view-btn:hover > svg > path {\n      fill: var(--ing-orange);\n    }\n\n    .toggle-view-btn:disabled {\n      fill: var(--ing-orange);\n      color: var(--ing-orange);\n    }\n\n    .pagination {\n      margin-top: 20px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-size: 14px;\n      text-align: center;\n    }\n\n    .pagination * {\n      font-family: 'INGFont', sans-serif;\n    }\n\n    .pagination-btn {\n      margin: 0 8px;\n      background-color: transparent;\n      border: none;\n      cursor: pointer;\n      color: var(--ing-orange);\n      border: 2px solid var(--ing-orange);\n      border-radius: 50%;\n      font-size: 14px;\n    }\n\n    .pagination-btn:hover {\n      background-color: var(--ing-orange);\n      color: var(--white);\n    }\n\n    .page-btn {\n      background-color: transparent;\n      border: none;\n      font-size: 14px;\n      cursor: pointer;\n      display: inline-block;\n      padding: 4px 8px;\n      border-radius: 5px;\n      margin: 0 4px;\n      color: var(--ing-blue);\n    }\n\n    .page-btn:hover:not(.active) {\n      background-color: transparent;\n      outline: 2px solid var(--ing-orange);\n      color: var(--ing-orange);\n    }\n\n    .page-btn.active {\n      margin: 0 5px;\n      background-color: var(--ing-orange);\n      color: var(--white);\n      border: none;\n    }\n\n    .page-btn.active:hover {\n      background-color: transparent;\n      border: 2px solid var(--ing-orange);\n      color: var(--ing-blue);\n    }\n\n    .features {\n      display: flex;\n      flex-direction: column-reverse;\n      gap: 16px;\n      align-items: flex-end;\n    }\n\n    .header-actions {\n      display: flex;\n      flex-direction: column-reverse;\n      gap: 8px;\n      margin-bottom: 16px;\n    }\n\n    .search {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      color: var(--ing-blue);\n    }\n\n    .search-input {\n      border: 2px solid var(--ing-orange);\n      border-radius: 4px;\n      padding: 4px 6px;\n      margin: 0;\n      width: 180px;\n    }\n\n    input[type='search' i] {\n      appearance: none;\n    }\n\n    .search-input::-webkit-search-decoration {\n      -webkit-appearance: none;\n    }\n\n    .search-input::-webkit-search-cancel-button {\n      -webkit-appearance: none;\n    }\n\n    .search-input:focus {\n      opacity: 1;\n      padding: 4px 6px;\n      border: 2px solid var(--ing-blue);\n    }\n\n    .search-input:focus:hover {\n      border: 2px solid var(--ing-blue);\n      padding: 4px 6px;\n      opacity: 1;\n    }\n\n    .search-input::placeholder {\n      font-size: 14px;\n      font-family: 'INGFont', sans-serif;\n      color: var(--ing-blue);\n      text-align: center;\n      margin: 0;\n    }\n\n    .no-employees {\n      display: grid;\n      width: 100%;\n      height: 100%;\n      place-content: center;\n      text-align: center;\n    }\n\n    @media only screen and (min-width: 768px) {\n      .grid-view .actions-buttons {\n        display: flex;\n      }\n\n      .header-actions {\n        flex-direction: row;\n        gap: 16px;\n        align-items: center;\n        margin-bottom: 0;\n      }\n\n      .features {\n        flex-direction: row;\n        justify-content: flex-end;\n        align-items: center;\n      }\n    }\n  `];\n\n  static properties = {\n    employees: {type: Array},\n    selectedEmployeesIDs: {type: Array},\n    viewMode: {type: String},\n    currentPage: {type: Number},\n    employeesPerPage: {type: Number},\n    totalPages: {type: Number},\n    loading: {type: Boolean},\n    selectedToDeleteID: {type: Number},\n    deleteMessage: {type: String},\n    isModalActive: {type: Boolean},\n    filteredEmployees: {type: Array},\n  };\n\n  constructor() {\n    super();\n    this.employees = [];\n    this.selectedEmployeesIDs = [];\n    this.viewMode = 'table';\n    this.currentPage = 1;\n    this.employeesPerPage = 10;\n    this.totalPages = 1;\n    this.loading = true;\n    this.isDelete = false;\n    this.selectedToDeleteID = null;\n    this.deleteMessage = '';\n    this.isModalActive = false;\n    this.filteredEmployees = [];\n\n    const params = new URLSearchParams(window.location.search);\n    this.currentPage = this.getPageFromUrl() || 1;\n    this.searchQuery = params.get('search') || '';\n\n    window.addEventListener('popstate', () => this.checkUrlChange());\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    window.removeEventListener('popstate', () => this.checkUrlChange());\n  }\n\n  // Search & URL Page Customising Functionality //\n\n  getPageFromUrl() {\n    const params = new URLSearchParams(window.location.search);\n    const page = parseInt(params.get('page'));\n    return !isNaN(page) && page > 0 ? page : 1;\n  }\n\n  changePage(page) {\n    if (page > 0 && page !== this.currentPage) {\n      this.currentPage = page;\n      this.changeUrl();\n    }\n  }\n\n  checkUrlChange() {\n    const params = new URLSearchParams(window.location.search);\n    this.currentPage = this.getPageFromUrl();\n    this.searchQuery = params.get('search') || '';\n    this.filterEmployees();\n  }\n\n  handleSearch(e) {\n    const inputValue = e?.target?.value?.trim() || '';\n    this.searchQuery = inputValue;\n    this.currentPage = 1;\n    this.changeUrl();\n\n    if (!this.searchQuery || this.filteredEmployees.length === 0) {\n      this.clearSearch();\n    }\n  }\n\n  clearSearch() {\n    if (!this.searchQuery) {\n      this.changeUrl();\n    } else {\n      this.searchQuery = '';\n      this.changeUrl();\n    }\n  }\n\n  changeUrl() {\n    const params = new URLSearchParams(window.location.search);\n    params.set('page', this.currentPage);\n    params.set('search', this.searchQuery);\n\n    const newUrl = `${window.location.pathname}?${params.toString()}`;\n    window.history.pushState({}, '', newUrl);\n\n    this.filterEmployees();\n  }\n\n  dividedEmployees(employees) {\n    const start = (this.currentPage - 1) * this.employeesPerPage;\n    const end = start + this.employeesPerPage;\n    return employees.slice(start, end);\n  }\n\n  filterEmployees() {\n    const searchQueryLowerCase = this.searchQuery.toLowerCase();\n\n    if (this.searchQuery) {\n      this.filteredEmployees = this.employees.filter((employee) =>\n        Object.values(employee)\n          .join(' ')\n          .toLowerCase()\n          .includes(searchQueryLowerCase)\n      );\n    } else {\n      this.filteredEmployees = this.dividedEmployees(this.employees);\n    }\n\n    this.totalPages = Math.ceil(\n      this.filteredEmployees.length / this.employeesPerPage\n    );\n\n    if (this.filteredEmployees.length === 0 && this.searchQuery) {\n      this.clearSearch();\n    }\n\n    this.requestUpdate();\n  }\n\n  async firstUpdated() {\n    try {\n      this.loading = true;\n      const data = await store.fetchEmployees();\n      if (Array.isArray(data)) {\n        this.employees = data;\n      } else {\n        console.log('Data is not an array', data);\n      }\n    } catch (error) {\n      console.log('Error fetching employees', error);\n    } finally {\n      this.loading = false;\n      this.filterEmployees();\n      this.requestUpdate();\n    }\n\n    window.addEventListener('popstate', () => {\n      this.currentPage = this.getPageFromUrl();\n    });\n  }\n\n  //TODO: When user route to another page, this.employees is not updated even the store\n  // has the data. Need to find a way to update this.employees when the store is updated.\n\n  render() {\n    if (this.loading) {\n      return html`<p>${translate('warnings.loading')}</p>`;\n    }\n\n    if (!this.filteredEmployees.length) {\n      return html`<div class=\"no-employees\">\n        <p>${translate('warnings.noEmployees')}</p>\n        <button\n          class=\"btn-primary\"\n          @click=\"${() => (window.location.href = '/')}\"\n        >\n        ${translate('buttons.homePage')}\n        </button>\n      </div>`;\n    } else {\n      return html`\n        <section class=\"employee-list\">\n          <div class=\"header\">\n            <h2 class=\"title\">${translate('title.employeeList')}</h2>\n\n            <div class=\"features\">\n              <div class=\"header-actions\">\n                <!-- Delete Button for Selected Employees -->\n                ${this.selectedEmployeesIDs.length > 0\n                  ? html`\n                      <button\n                        class=\"btn-primary small\"\n                        @click=\"${this.onDeleteSelected}\"\n                        data-tooltip=\"Delete All Selected Employees\"\n                        aria-label=\"Delete Selected Employees\"\n                      >\n                      ${translate('buttons.deleteSelected')}\n                      </button>\n                    `\n                  : ''}\n\n                <!-- Search on page -->\n                <div class=\"search\">\n                  <input\n                    type=\"search\"\n                    id=\"search\"\n                    placeholder=\"${translate('placeholder.search')}\"\n                    class=\"search-input\"\n                    @input=${this.handleSearch}\n                    @search=${this.clearSearch}\n                    aria-label=\"Search through site content\"\n                    autocomplete=\"off\"\n                  />\n                </div>\n              </div>\n\n              <!-- View Mode Toggle Button -->\n              <div class=\"toggle-view-buttons\">\n                <tooltip-component>\n                  <button\n                    class=\"table-view-btn toggle-view-btn\"\n                    @click=\"${()=>this.switchViewMode('table')}\"\n                    ?disabled=${this.viewMode === 'table'}\n                    aria-label=\"${translate('viewMode.table')} Button\"\n                  >\n                    <icon-component .icon=${tableIcon}></icon-component>\n                  </button>\n                  <div slot=\"tooltip\">${translate('viewMode.table')}</div>\n                </tooltip-component>\n                <tooltip-component>\n                  <button\n                    class=\"grid-view-btn toggle-view-btn\"\n                    @click=\"${()=>this.switchViewMode('grid')}\"\n                    ?disabled=${this.viewMode === 'grid'}\n                    aria-label=\"${translate('viewMode.grid')}\"\n                  >\n                    <icon-component .icon=${gridIcon}></icon-component>\n                  </button>\n                  <div slot=\"tooltip\">${translate('viewMode.grid')}</div>\n                </tooltip-component>\n              </div>\n            </div>\n          </div>\n\n          <!-- Grid View -->\n          ${this.viewMode === 'grid'\n            ? html` <div class=\"grid-view\" aria-label=\"${translate('title.employeeList')}\">\n                ${this.filteredEmployees.map(\n                  (employee) => html`\n                    <div\n                      class=\"grid-card ${employee.selected ? 'selected' : ''}\"\n                    >\n                      <div class=\"grid-content\">\n                        <div class=\"name\" aria-label=\"Employee Name\">\n                          <span>${employee.firstName}</span>\n                          <span>${employee.lastName}</span>\n                        </div>\n                        <div\n                          class=\"detail\"\n                          aria-label=\"Employee's ${translate('labels.dateOfBirth')}\"\n                        >\n                          <span class=\"category\">${translate('labels.dateOfBirth')}:</span>\n                          <span>${employee.dateOfBirth}</span>\n                        </div>\n                        <div\n                          class=\"detail\"\n                          aria-label=\"Employee's Phone Number\"\n                        >\n                          <span class=\"category\">Phone Number:</span>\n                          <span>${employee.phoneNumber}</span>\n                        </div>\n                        <div class=\"detail\" aria-label=\"Employee's Email\">\n                          <span class=\"category\">Email: </span>\n                          <span>${employee.email}</span>\n                        </div>\n                        <div\n                          class=\"detail\"\n                          aria-label=\"Employee's Department/Position\"\n                        >\n                          <span class=\"category\">Department/Position: </span>\n                          <span\n                            >${employee.department} / ${employee.position}</span\n                          >\n                        </div>\n\n                        <div\n                          class=\"detail\"\n                          aria-label=\"Employee's ${translate('labels.dateOfEmployment')}\"\n                        >\n                          <span class=\"category\">${translate('labels.dateOfEmployment')}: </span>\n                          <span>${employee.dateOfEmployment}</span>\n                        </div>\n                      </div>\n\n                      <label\n                        for=\"checkbox-${employee.id}\"\n                        class=\"checkbox-select-employee-label ${employee.selected\n                          ? 'selected'\n                          : ''}\"\n                        aria-label=\"${employee.selected\n                          ? 'Label for Unselect the Employee'\n                          : 'Label for Select the Employee'}\"\n                        >${employee.selected ? 'Unselect' : 'Select'}</label\n                      >\n\n                      <input\n                        type=\"checkbox\"\n                        class=\"checkbox-select-employee\"\n                        name=\"checkbox-${employee.id}\"\n                        id=\"checkbox-${employee.id}\"\n                        ?checked=\"${employee.selected}\"\n                        @change=\"${(e) => this.toggleSelection(e, employee)}\"\n                        aria-checked=\"${employee.selected}\"\n                        aria-label=\"${employee.selected\n                          ? 'Unselect the Employee'\n                          : 'Select the Employee'}\"\n                      />\n\n                      <div class=\"actions-buttons\">\n                        <button\n                          @click=${() => this.onEdit(employee.id)}\n                          aria-label=\"Edit Employee Details\"\n                        >\n                          <p class=\"actions-buttons-text\">\n                            <icon-component .icon=${editIcon}></icon-component\n                            >Edit\n                          </p>\n                        </button>\n\n                        <button\n                          @click=${() => this.onDelete(employee.id)}\n                          aria-label=\"Delete Employee\"\n                        >\n                          <p class=\"actions-buttons-text\">\n                            <icon-component\n                              .icon=${deleteIcon}\n                            ></icon-component>\n                            Delete\n                          </p>\n                        </button>\n                      </div>\n                    </div>\n                  `\n                )}\n              </div>`\n            : ''}\n\n          <!-- Table View -->\n          ${this.viewMode === 'table'\n            ? html` <table\n                class=\"table-view\"\n                aria-label=\"Employee List as a Table\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <input\n                        type=\"checkbox\"\n                        class=\"checkbox-select-employee\"\n                        ?checked=\"${this.selectedEmployeesIDs.length ===\n                        this.employees.length}\"\n                        @change=\"${this.toggleSelectAll}\"\n                        aria-checked=\"${this.selectedEmployeesIDs.length ===\n                        this.employees.length}\"\n                        aria-label=\"Select All Employees\"\n                      />\n                    </th>\n                    <th aria-label=\"Table Header for Employee's First Name\">\n                      First Name\n                    </th>\n                    <th aria-label=\"Table Header for Employee's Last Name\">\n                      Last Name\n                    </th>\n                    <th\n                      aria-label=\"Table Header for Employee's ${translate('labels.dateOfEmployment')}\"\n                    >\n                      ${translate('labels.dateOfEmployment')}\n                    </th>\n                    <th aria-label=\"Table Header for Employee's ${translate('labels.dateOfBirth')}\">\n                      ${translate('labels.dateOfBirth')}\n                    </th>\n                    <th aria-label=\"Table Header for Employee's Phone\">\n                      Phone\n                    </th>\n                    <th aria-label=\"Table Header for Employee's Email\">\n                      Email\n                    </th>\n                    <th aria-label=\"Table Header for Employee's Department\">\n                      Department\n                    </th>\n                    <th aria-label=\"Table Header for Employee's Position\">\n                      Position\n                    </th>\n                    <th aria-label=\"Table Header for Employee's Actions\">\n                      Actions\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${this.filteredEmployees.map(\n                    (employee) => html`\n                      <tr>\n                        <td class=\"checkbox-wrapper\">\n                          <input\n                            type=\"checkbox\"\n                            class=\"checkbox\"\n                            name=\"checkbox-${employee.id}\"\n                            id=\"checkbox-${employee.id}\"\n                            ?checked=\"${employee.selected}\"\n                            @change=\"${(e) =>\n                              this.toggleSelection(e, employee)}\"\n                            aria-checked=\"${employee.selected}\"\n                            aria-label=\"${employee.selected\n                              ? 'Unselect the Employee'\n                              : 'Select the Employee'}\"\n                          />\n                        </td>\n                        <td aria-label=\"Employee's First Name\" class=\"name\">\n                          ${employee.firstName}\n                        </td>\n                        <td aria-label=\"Employee's Last Name\" class=\"name\">\n                          ${employee.lastName}\n                        </td>\n                        <td aria-label=\"Employee's ${translate('labels.dateOfEmployment')}\">\n                          ${employee.dateOfEmployment}\n                        </td>\n                        <td aria-label=\"Employee's ${translate('labels.dateOfBirth')}\">\n                          ${employee.dateOfBirth}\n                        </td>\n                        <td aria-label=\"Employee's Phone\">\n                          ${employee.phoneNumber}\n                        </td>\n                        <td aria-label=\"Employee's Email\">${employee.email}</td>\n                        <td aria-label=\"Employee's Department\">\n                          ${employee.department}\n                        </td>\n                        <td aria-label=\"Employee's Position\">\n                          ${employee.position}\n                        </td>\n                        <td\n                          class=\"actions-buttons\"\n                          aria-label=\"Employee's Actions Buttons\"\n                        >\n                          <tooltip-component>\n                            <button\n                              @click=${() => this.onEdit(employee.id)}\n                              aria-label=\"Edit Employee Details Button\"\n                            >\n                              <icon-component\n                                .icon=${editIcon}\n                              ></icon-component>\n                            </button>\n                            <div slot=\"tooltip\">Edit</div>\n                          </tooltip-component>\n                          <tooltip-component>\n                            <button\n                              @click=${() => this.onDelete(employee.id)}\n                              aria-label=\"Delete Employee Button\"\n                            >\n                              <icon-component\n                                .icon=${deleteIcon}\n                              ></icon-component>\n                            </button>\n                            <div slot=\"tooltip\">Delete</div>\n                          </tooltip-component>\n                        </td>\n                      </tr>\n                    `\n                  )}\n                </tbody>\n              </table>`\n            : ''}\n\n          <div class=\"pagination\" aria-label=\"Pagination\">\n            <button\n              ?disabled=\"${this.currentPage === 1}\"\n              @click=\"${() => this.changePage(this.currentPage - 1)}\"\n              class=\"pagination-btn prev\"\n              aria-label=\"Previous Page Button\"\n            >\n              <\n            </button>\n            <div>${this.generatePageNumbers()}</div>\n            <button\n              ?disabled=\"${this.currentPage ===\n              Math.ceil(this.employees.length / this.employeesPerPage)}\"\n              @click=\"${() => this.changePage(this.currentPage + 1)}\"\n              class=\"pagination-btn next\"\n              aria-label=\"Next Page Button\"\n            >\n              >\n            </button>\n          </div>\n\n          <modal-component\n            ?isActive=${this.isModalActive}\n            modalTitle=\"Update Confirmation\"\n            @confirm=${this.onConfirm}\n            @cancel=${this.onCancel}\n            aria-label=\"Modal for Delete Confirmation\"\n          >\n            <div slot=\"modal-message\">\n              <p aria-label=\"Modal's Message\">\n                Are you sure you want to delete?\n              </p>\n            </div>\n          </modal-component>\n        </section>\n      `;\n    }\n  }\n\n  // Pagination //\n\n  // TODO: Pagination is not working properly. Need to fix the issue. \n  // The numbers not showing without clicking the next or previous button.\n\n  setPage = (pageNum) => {\n    if (pageNum < 1 || pageNum > this.totalPages) return;\n    this.currentPage = pageNum;\n    this.changeUrl();\n  };\n\n  generatePageNumbers() {\n    this.totalPages = Math.ceil(\n      this.filteredEmployees.length / this.employeesPerPage\n    );\n\n    const pageNumbers = [];\n\n    const generatePageButton = (pageNum) => {\n      pageNumbers.push(html`\n        <button\n          class=\"page-btn ${this.currentPage === pageNum ? 'active' : ''}\"\n          @click=${() => this.setPage(pageNum)}\n        >\n          ${pageNum}\n        </button>\n      `);\n    };\n\n    generatePageButton(1);\n\n    if (this.currentPage > 3) {\n      pageNumbers.push(html`<span class=\"page-dots\">...</span>`);\n    }\n\n    for (let i = Math.max(2, this.currentPage - 1); i < this.currentPage; i++) {\n      generatePageButton(i);\n    }\n\n    if (this.currentPage !== 1 && this.currentPage !== this.totalPages) {\n      generatePageButton(this.currentPage);\n    }\n\n    for (\n      let i = this.currentPage + 1;\n      i < Math.min(this.totalPages, this.currentPage + 2);\n      i++\n    ) {\n      generatePageButton(i);\n    }\n    if (this.currentPage < this.totalPages - 2) {\n      pageNumbers.push(html`<span class=\"page-dots\">...</span>`);\n    }\n\n    if (this.totalPages > 1) {\n      generatePageButton(this.totalPages);\n    }\n\n    return pageNumbers;\n  }\n\n  // End of Pagination //\n\n  // Switch between list and table view //\n\n  switchViewMode(newMode) {\n    this.viewMode = newMode\n  }\n\n  // End of Switch between list and table view //\n\n  // Edit and Delete Functionality //\n\n  onEdit(employeeID) {\n    window.history.pushState({}, '', `/edit/${employeeID}`);\n    window.dispatchEvent(new PopStateEvent('popstate'));\n  }\n\n  onDelete(id) {\n    const employee = store.fetchEmployee(id);\n    this.deleteMessage = `Are you sure you want to delete ${employee.firstName} ${employee.lastName}?`;\n    this.selectedToDeleteID = id;\n    this.isModalActive = true;\n  }\n\n  onDeleteSelected() {\n    if (!this.selectedEmployeesIDs.length) return;\n    this.isModalActive = true;\n  }\n\n  async onConfirm() {\n    try {\n      if (this.selectedToDeleteID) {\n        store.deleteEmployee(this.selectedToDeleteID);\n        this.employees = store.fetchEmployees();\n        this.selectedToDeleteID = null;\n      } else {\n        await Promise.all(\n          this.selectedEmployeesIDs.map((id) => store.deleteEmployee(id))\n        );\n        this.employees = store.fetchEmployees();\n        this.selectedEmployeesIDs = [];\n      }\n    } catch (error) {\n      console.log('Error deleting employee', error);\n    } finally {\n      this.removeModal();\n    }\n  }\n\n  onCancel() {\n    this.removeModal();\n    this.selectedToDeleteID = null;\n  }\n\n  removeModal() {\n    this.isModalActive = false;\n    document.body.classList.remove('modal-open');\n  }\n\n  toggleSelectAll(e) {\n    const isSelected = e.target.checked;\n\n    this.employees = this.employees.map((emp) => ({\n      ...emp,\n      selected: isSelected,\n    }));\n\n    this.selectedEmployeesIDs = isSelected\n      ? this.employees.map((emp) => emp.id)\n      : [];\n  }\n\n  toggleSelection(e, employee) {\n    e.preventDefault();\n    const isSelected = e.target.checked;\n\n    employee.selected = isSelected;\n\n    this.selectedEmployeesIDs = this.employees\n      .filter((emp) => emp.selected)\n      .map((emp) => emp.id);\n  }\n\n  updateEmployees() {\n    store.updateEmployees(this.employees);\n    this.selectedEmployeesIDs = [];\n    this.requestUpdate();\n  }\n\n  // End of Edit and Delete Functionality //\n}\n\ncustomElements.define('employee-list-view', EmployeeListView);","import { Router } from '@vaadin/router';\nimport '../views/employee-list-view.js';\n\nexport const router = new Router();\n\nrouter.setRoutes([\n  {\n    path: '/',\n    component: 'employee-list-view',\n    action: async () => {\n      document.title = 'HR-Lite | Employee List';\n      return undefined;\n    }\n  },\n  {\n    path: '/add',\n    component: 'employee-add-update',\n    action: async () => {\n      document.title = 'HR-Lite | Add New Employee';\n      await import(/* webpackChunkName: \"employee-add-update\" */ '../views/employee-add-update-view.js');\n    }\n  },\n  {\n    path: '/edit/:id',\n    component: 'employee-add-update',\n    action: async () => {\n      document.title = 'HR-Lite | Update Employee';\n      await import(/* webpackChunkName: \"employee-add-update\" */ '../views/employee-add-update-view.js');\n    }\n  },\n  {\n    path: '(.*)',\n    component: 'not-found-view',\n    action: () =>\n      import(/* webpackChunkName: \"not-found-view\" */ '../views/not-found-view.js')\n  }\n]); \n\n// TODO: add localisation and translate the titles","import {html, css} from 'lit';\nimport {ParentComponent} from './parent-component';\nimport '../utils/icon-template.js';\nimport { translate } from '../utils/translate.js';\n\nimport {\n  employeeIcon,\n  trFlagIcon,\n  engFlagIcon,\n  ingLogo,\n  addIcon,\n} from '../utils/svg-template.js';\n\nimport {store} from '../store/store.js';\n\nexport class Navigation extends ParentComponent {\n  static styles = css`\n    nav {\n      margin: 10px 30px;\n      padding: 6px 16px;\n      display: flex;\n      justify-content: space-between;\n      background-color: var(--white);\n    }\n\n    .brand-logo {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n      text-decoration: none;\n      cursor: pointer;\n    }\n\n    .brand-logo *,\n    .brand-logo:hover,\n    .brand-logo:active,\n    .brand-logo:focus,\n    .brand-logo:visited {\n      color: var(--ing-dark-gray);\n      line-height: 0;\n    }\n\n    .nav-menu {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n    }\n\n    .nav-links {\n      display: flex;\n      gap: 10px;\n    }\n\n    .nav-link {\n      display: flex;\n      align-items: center;\n      gap: 4px;\n      cursor: pointer;\n      text-decoration: none;\n      padding: 2px 6px;\n      border-radius: 3px;\n      color: var(--ing-orange);\n      fill: var(--ing-orange);\n    }\n\n    .nav-link:hover {\n      outline: 2px solid var(--ing-orange);\n      padding: 2px 6px;\n      color: var(--ing-orange);\n      fill: var(--ing-orange);\n      border-radius: 3px;\n    }\n\n    .nav-link:active {\n      outline: 2px solid var(--ing-orange);\n      padding: 2px 6px;\n      color: var(--ing-orange);\n      border-radius: 3px;\n    }\n\n    .language-switcher{\n      background-color: transparent;\n      border: none;\n      cursor: pointer;\n      margin-left: 10px;\n      padding-top: 4px;\n    }\n  `;\n\n  static properties = {\n    selectedLanguage: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.selectedLanguage = store.fetchLanguage();\n  }\n\n  switchLanguage() {\n    this.selectedLanguage === 'tr'\n      ? (this.selectedLanguage = 'en')\n      : (this.selectedLanguage = 'tr');\n    store.setLanguage(this.selectedLanguage);\n    this.requestUpdate();\n  }\n\n  render() {\n    return html`\n      <nav>\n        <div class=\"brand\">\n          <a class=\"brand-logo\" href=\"/\">\n            <icon-component .icon=\"${ingLogo}\"></icon-component>\n            <p>ING</p>\n          </a>\n        </div>\n        <div class=\"nav-menu\">\n          <div class=\"nav-links\">\n            <a href=\"/\" class=\"nav-link home\">\n              <icon-component .icon=\"${employeeIcon}\"></icon-component\n              >${translate('navigation.employees')}</a\n            >\n            <a href=\"/add\" class=\"nav-link add\">\n              <icon-component .icon=\"${addIcon}\"></icon-component>${translate('navigation.addNewEmployee')}</a\n            >\n          </div>\n          <button @click=${this.switchLanguage} class=\"language-switcher\">\n            <icon-component\n              .icon=\"${store.state.language === 'tr'\n                ? trFlagIcon\n                : engFlagIcon}\"\n            ></icon-component>\n          </button>\n        </div>\n      </nav>\n    `;\n  }\n}\n\ncustomElements.define('navigation-component', Navigation);\n","import {LitElement, html} from 'lit';\nimport {router} from './src/router/router.js';\nimport './src/components/navigation.js';\nimport {store} from './src/store/store.js';\nimport { translate } from './src/utils/translate'; \n\nexport class App extends LitElement {\n  //Added ING Font and ING Icon Fonts\n  //provided by this github repo:\n  //https://github.com/eugev/auction/tree/master/2291ec1c83a719fce7602b9c1605fc_payment_3de88732a94a7c578/2e9800f81ab50b4fd1_payments_ae9037ed66f85923/ing/fonts/app\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (!document.querySelector('#global-ing-fonts')) {\n      const globalStyle = document.createElement('style');\n      globalStyle.textContent = `\n\n      :root{\n      --ing-orange: #ff6200;\n      --ing-blue: #052868;\n      --ing-gray: #f5f5f5;\n      --ing-dark-gray: #333333;\n      --black: #000000;\n      --white: #ffffff;\n      --ing-orange-10: #ff620010;\n      }\n\n      @font-face {\n        font-family: 'INGFont';\n        src: url('./assets/fonts/INGMeWeb-Regular.woff2') format('woff2'),\n             url('./assets/fonts/INGMeWeb-Regular.woff') format('woff');\n        font-weight: normal;\n        font-style: normal;\n      }\n\n      html {\n        background-color: #f5f5f5;\n      }\n        \n      body {\n        font-family: 'INGFont', sans-serif;\n      }\n\n      .modal-open {\n        position: fixed;\n        top: 0;\n        left: 0;\n        overflow: hidden;\n        width: 100%;\n      }\n    `;\n\n      document.head.appendChild(globalStyle);\n    }\n  }\n\n  constructor() {\n    super();\n    this.router = router;\n    this.checkLanguage(); // Check if language is initialized\n    // this.isLoading = true;\n  }\n\n  checkLanguage() {\n    const currentLanguage = store.fetchLanguage();\n    if (currentLanguage) {\n      this.loading = false;  \n      this.requestUpdate();  \n    } else {\n      store.setLanguage('en');\n      this.loading = false;\n      this.requestUpdate();\n    }\n  }\n\n  firstUpdated() {\n    const outlet = this.shadowRoot.querySelector('#outlet');\n    if (outlet) {\n      this.router.setOutlet(outlet);\n    }\n  }\n\n  render() {\n    const currentLanguage = store.fetchLanguage();\n    console.log(currentLanguage);\n\n    if (this.isLoading || !currentLanguage) {\n      return html`<div>${translate('warnings.loading')}</div>`;  // Translate loading text\n    }\n\n    return html`\n      <navigation-component></navigation-component>\n      <main>\n        <div id=\"outlet\"></div>\n      </main>\n    `;\n  }\n}\n\nwindow.customElements.define('app-root', App);\n"],"names":["globalStyles","CSSStyleSheet","replaceSync","createRandomDate","start","end","Date","getTime","Math","random","toISOString","split","TRtoENGCharacter","text","charMap","replace","match","createRandomEmail","firstName","lastName","toLowerCase","firstNames","lastNames","departments","positions","store","LitState","constructor","super","this","storageKey","language","subscribers","localStorage","getItem","mockData","count","Array","from","length","_","index","floor","id","toString","dateOfEmployment","dateOfBirth","phoneNumber","email","department","position","selected","generateMockEmployees","setItem","JSON","stringify","state","employees","parse","fetchLanguage","setLanguage","notifySubscribers","subscribe","callback","push","forEach","fetchEmployees","fetchEmployee","find","emp","addEmployee","employee","newEmployee","max","map","parseInt","updateEmployee","findIndex","deleteEmployee","filter","ParentComponent","observeState","LitElement","static","type","requestUpdate","disconnectedCallback","svg","addIcon","closeIcon","deleteIcon","employeeIcon","engFlagIcon","trFlagIcon","gridIcon","tableIcon","editIcon","ingLogo","IconComponent","icon","Object","css","render","html","customElements","define","Modal","message","String","isActive","Boolean","modalTitle","updated","changedProperties","has","dispatchEvent","CustomEvent","detail","bubbles","composed","closeModal","handleConfirm","handleCancel","TooltipComponent","translations","en","title","employeeList","warnings","loading","noEmployees","buttons","homePage","deleteSelected","navigation","addNewEmployee","placeholder","search","buttonText","edit","delete","tableHeaders","employmentDate","birthDate","actions","viewMode","grid","table","labels","tr","list","translate","key","currentLanguage","console","error","translation","obj","reduce","acc","part","undefined","EmployeeListView","selectedEmployeesIDs","currentPage","Number","employeesPerPage","totalPages","selectedToDeleteID","deleteMessage","isModalActive","filteredEmployees","isDelete","params","URLSearchParams","window","location","getPageFromUrl","searchQuery","get","addEventListener","checkUrlChange","removeEventListener","page","isNaN","changePage","changeUrl","filterEmployees","handleSearch","e","inputValue","target","value","trim","clearSearch","set","newUrl","pathname","history","pushState","dividedEmployees","slice","searchQueryLowerCase","values","join","includes","ceil","firstUpdated","data","isArray","log","onDeleteSelected","switchViewMode","toggleSelection","onEdit","onDelete","toggleSelectAll","generatePageNumbers","onConfirm","onCancel","href","setPage","pageNum","pageNumbers","generatePageButton","i","min","newMode","employeeID","PopStateEvent","Promise","all","removeModal","document","body","classList","remove","isSelected","checked","preventDefault","updateEmployees","router","Router","setRoutes","path","component","action","async","import","Navigation","selectedLanguage","switchLanguage","App","connectedCallback","querySelector","globalStyle","createElement","textContent","head","appendChild","checkLanguage","outlet","shadowRoot","setOutlet","isLoading"],"mappings":"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"}