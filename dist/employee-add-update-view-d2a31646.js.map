{"version":3,"file":"employee-add-update-view-d2a31646.js","sources":["../src/components/employee-form.js","../src/views/employee-add-update-view.js"],"sourcesContent":["import {html, css} from 'lit';\nimport {ParentComponent} from './parent-component';\nimport {store} from '../store/store';\nimport './modal';\nimport { translate } from '../utils/translate.js';\n\nexport class EmployeeForm extends ParentComponent {\n  static styles = css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    .employee-form {\n      max-width: 1000px;\n      width: 100%;\n      margin: 0 auto;\n      padding: 20px 56px;\n      background-color: #f9f9f9;\n      border-radius: 8px;\n      box-shadow: 0 6px 8px var(--ing-orange-10);\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 20px;\n    }\n\n    .employee-form div {\n      margin-bottom: 15px;\n    }\n\n    .employee-form * {\n      font-family: 'INGFont', sans-serif;\n    }\n\n    label {\n      display: block;\n      font-weight: bold;\n      margin-bottom: 5px;\n    }\n\n    input,\n    select,\n    button {\n      width: 100%;\n      padding: 10px;\n      font-size: 16px;\n      border: 2px solid #ccc;\n      border-radius: 4px;\n      transition: border-color 0.3s;\n    }\n\n    input:focus,\n    select:focus,\n    button:focus {\n      border-color: var(--ing-orange);\n      outline: none;\n    }\n\n    .department-radio-group {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 10px;\n      margin-top: 32px;\n    }\n\n    .department-radio-group input[type='radio'] {\n      width: 20px;\n    }\n\n    .department-radio-group label {\n      margin: 0;\n      padding: 0;\n    }\n\n    #analytics {\n      margin-left: 48px;\n    }\n\n    input[type='radio'] {\n      width: 20px;\n      height: 20px;\n      border: 2px solid var(--ing-orange);\n      border-radius: 50%;\n      appearance: none;\n      background-color: var(--white); \n      transition: background-color 0.3s ease;\n    }\n\n    input[type='radio']:checked {\n      background-color: var(--ing-orange);\n      border-color: var(--white);\n    }\n\n    input[type='radio']:focus {\n      outline: none;\n      border-color: var(--white);\n    }\n\n    .position-select {\n      margin-top: 10px;\n    }\n\n    .position-select * {\n      font-family: 'INGFont', sans-serif;\n    }\n\n    button[type='submit'] {\n      background-color: var(--ing-orange);\n      color: white;\n      border: none;\n      cursor: pointer;\n      font-size: 16px;\n      grid-column: span 2;\n    }\n\n    button[type='submit']:hover {\n      color: var(--ing-blue);\n      background-color: transparent;\n      outline: 2px solid var(--ing-blue);\n    }\n\n    @media (max-width: 768px) {\n      .employee-form {\n        padding: 15px;\n        grid-template-columns: 1fr;\n      }\n\n      input,\n      select,\n      button {\n        padding: 12px;\n        font-size: 14px;\n      }\n\n      #analytics {\n      margin-left: 0;\n    }\n\n\n      .department-radio-group {\n        align-items: flex-start;\n      }\n\n      button[type='submit'] {\n        font-size: 14px;\n      }\n    }\n\n    @media (max-width: 480px) {\n      .employee-form {\n        padding: 10px;\n      }\n\n      input,\n      select,\n      button {\n        padding: 10px;\n        font-size: 12px;\n      }\n\n      button[type='submit'] {\n        font-size: 14px;\n      }\n    }\n  `;\n\n  static properties = {\n    employeeData: {type: Object},\n    isUpdate: {type: Boolean},\n    employeeID: {type: Number},\n    isModalActive: {type: Boolean},\n    confirmed: {type: Boolean},\n  };\n\n  constructor() {\n    super();\n    this.employeeData = {\n      firstName: '',\n      lastName: '',\n      dateOfEmployment: '',\n      dateOfBirth: '',\n      phoneNumber: '',\n      email: '',\n      department: '',\n      position: '',\n    };\n    this.isUpdate = false;\n    this.isModalActive = false;\n    this.confirmed = false;\n  }\n\n  async firstUpdated() {\n    if (this.employeeID) {\n      this.isUpdate = true;\n      this.employeeData = await store.fetchEmployee(this.employeeID);\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('modal-closed', this.handleModalClosed);\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('modal-closed', this.handleModalClosed);\n    super.disconnectedCallback();\n  }\n\n  handleModalClosed(event) {\n    this.isModalActive = event.detail.isActive;\n  }\n\n  //TODO: Implement the form validation logic here\n\n  render() {\n    return html`\n      <form @submit=${this.onSubmit} class=\"employee-form\">\n        <div>\n          <label for=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            @input=${this.onInput}\n            value=${this.employeeData.firstName}\n            required\n            aria-label=\"Input for First Name\"\n            class=\"name-input first\"\n          />\n        </div>\n        <div>\n          <label for=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            @input=${this.onInput}\n            value=${this.employeeData.lastName}\n            required\n            aria-label=\"Input for Last Name\"\n            class=\"name-input last\"\n          />\n        </div>\n        <div>\n          <label for=\"phoneNumber\"\n            >Phone Number <small>Format: +901234567890 </small></label\n          >\n          <input\n            type=\"tel\"\n            name=\"phoneNumber\"\n            placeholder=\"Phone Number\"\n            @input=${this.onInput}\n            value=${this.employeeData.phoneNumber}\n            required\n            aria-label=\"Input for Phone Number\"\n            class=\"phone-input\"\n          />\n        </div>\n        <div>\n          <label for=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            @input=${this.onInput}\n            value=${this.employeeData.email}\n            required\n            aria-label=\"Input for Email\"\n            class=\"email-input\"\n          />\n        </div>\n        <div>\n          <label for=\"dateOfBirth\">${translate('labels.dateOfBirth')}</label>\n          <input\n            type=\"date\"\n            name=\"dateOfBirth\"\n            placeholder=\"${translate('labels.dateOfBirth')}\"\n            @input=${this.onInput}\n            value=${this.employeeData.dateOfBirth}\n            required\n            aria-label=\"Input for ${translate('labels.dateOfBirth')}\"\n            class=\"date-input date-of-birth\"\n          />\n        </div>\n        <div>\n          <label for=\"dateOfEmployment\">${translate('labels.dateOfEmployment')}</label>\n          <input\n            type=\"date\"\n            name=\"dateOfEmployment\"\n            placeholder=\"${translate('labels.dateOfEmployment')}\"\n            value=${this.employeeData.dateOfEmployment}\n            @input=${this.onInput}\n            required\n            aria-label=\"Input for ${translate('labels.dateOfEmployment')}\"\n            class=\"date-input date-of-employment\"\n          />\n        </div>\n        <div>\n          <label for=\"department\">Department</label>\n          <div class=\"department-radio-group\">\n            <input\n              type=\"radio\"\n              id=\"tech\"\n              name=\"department\"\n              value=\"Tech\"\n              ?checked=${this.employeeData.department === 'Tech'}\n              @input=${this.onInput}\n              required\n              aria-label=\"Input for Tech Department\"\n              class=\"department-radio-option\"\n            />\n            <label for=\"tech\">Tech</label>\n            <input\n              type=\"radio\"\n              id=\"analytics\"\n              name=\"department\"\n              value=\"Analytics\"\n              ?checked=${this.employeeData.department === 'Analytics'}\n              @input=${this.onInput}\n              required\n              aria-label=\"Input for Analytics Department\"\n              class=\"department-radio-option\"\n            />\n            <label for=\"analytics\">Analytics</label>\n          </div>\n        </div>\n        <div class=\"position-select\">\n          <label for=\"position\">Position</label>\n          <select\n            name=\"position\"\n            @input=${this.onInput}\n            value=\"${this.employeeData.position}\"\n            required\n            aria-label=\"Select the position\"\n          >\n            <option value=\"\">Please choose the position</option>\n            <option\n              value=\"Junior\"\n              ?selected=${this.employeeData.position === 'Junior'}\n              aria-label=\"Select the Junior position\"\n            >\n              Junior\n            </option>\n            <option\n              value=\"Medior\"\n              ?selected=${this.employeeData.position === 'Medior'}\n              aria-label=\"Select the Medior position\"\n            >\n              Medior\n            </option>\n            <option\n              value=\"Senior\"\n              ?selected=${this.employeeData.position === 'Senior'}\n              aria-label=\"Select the Senior position\"\n            >\n              Senior\n            </option>\n          </select>\n        </div>\n        <button type=\"submit\" aria-label=\"Submit the form\" class=\"submit-btn\">\n          ${this.isUpdate ? 'Update the Employee' : 'Submit New Employee'}\n        </button>\n      </form>\n\n      <modal-component\n        ?isActive=${this.isModalActive}\n        modalTitle=\"Update Confirmation\"\n        @confirm=${this.onConfirm}\n        @cancel=${this.onCancel}\n        aria-label=\"Modal for Update Confirmation\"\n      >\n        <div slot=\"modal-message\">\n          <p aria-label=\"Confirmation Modal message\">\n            Confirm the update the information of\n            ${this.employeeData.firstName + ' ' + this.employeeData.lastName}\n          </p>\n        </div>\n      </modal-component>\n    `;\n  }\n\n  onInput(event) {\n    const {name, value} = event.target;\n    this.employeeData = {...this.employeeData, [name]: value};\n  }\n\n  async onSubmit(event) {\n    event.preventDefault();\n\n    try {\n      if (this.isUpdate) {\n        this.isModalActive = true;\n        document.body.classList.add('modal-open');\n        return;\n      }\n\n      await store.addEmployee(this.employeeData);\n      window.location.href = '/';\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  removeModal() {\n    this.isModalActive = false;\n    document.body.classList.remove('modal-open');\n  }\n\n  async onConfirm() {\n    try {\n      await store.updateEmployee(this.employeeData);\n      this.removeModal();\n      alert('Form updated successfully!', this.employeeData);\n      window.location.href = '/';\n    } catch (error) {\n      console.log('Error:', error);\n    } finally {\n      this.showConfirmModal = false;\n    }\n  }\n\n  onCancel() {\n    this.removeModal();\n  }\n}\n\ncustomElements.define('employee-form', EmployeeForm);\n","import {html, css} from 'lit';\nimport {ParentComponent} from '../components/parent-component.js';\nimport '../components/employee-form.js';\n\nexport class EmployeeAddUpdate extends ParentComponent {\n  static styles = css`\n    :host {\n      display: block;\n      padding: 20px 56px;\n    }\n    .page-title {\n      text-align: center;\n      color: var(--ing-orange);\n    }\n  `;\n  static properties = {\n    id: {type: Number},\n  };\n\n  constructor() {\n    super();\n    const urlParts = window.location.pathname.split('/');\n    const lastPartOfURL = urlParts[urlParts.length - 1];\n    this.id = lastPartOfURL;\n  }\n\n  render() {\n    return html`\n      ${this.id\n        ? html`<h1\n            class=\"page-title\"\n            aria-label=\"Page title for Update Employee\"\n          >\n            Update Employee\n          </h1>`\n        : html`<h1\n            class=\"page-title\"\n            aria-label=\"Page title for Add New Employee\"\n          >\n            Add Employee\n          </h1>`}\n      <employee-form .employeeID=\"${this.id}\"></employee-form>\n    `;\n  }\n}\n\ncustomElements.define('employee-add-update', EmployeeAddUpdate);\n"],"names":["EmployeeForm","ParentComponent","static","css","employeeData","type","Object","isUpdate","Boolean","employeeID","Number","isModalActive","confirmed","constructor","super","this","firstName","lastName","dateOfEmployment","dateOfBirth","phoneNumber","email","department","position","firstUpdated","store","fetchEmployee","connectedCallback","addEventListener","handleModalClosed","disconnectedCallback","removeEventListener","event","detail","isActive","render","html","onSubmit","onInput","translate","onConfirm","onCancel","name","value","target","preventDefault","document","body","classList","add","addEmployee","window","location","href","error","console","removeModal","remove","updateEmployee","alert","log","showConfirmModal","customElements","define","EmployeeAddUpdate","id","urlParts","pathname","split","lastPartOfURL","length"],"mappings":"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"}